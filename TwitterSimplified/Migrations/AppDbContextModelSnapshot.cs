// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwitterSimplified.Data;

namespace TwitterSimplified.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TwitterSimplified.Models.LikeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TweetId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TweetId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TweetId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            TweetId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            TweetId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            TweetId = 4,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TwitterSimplified.Models.ProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Contributing to this futuristic platform",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Bio = "Hard working",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TwitterSimplified.Models.TweetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserIdId");

                    b.ToTable("Tweets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "The first tweet!"
                        },
                        new
                        {
                            Id = 2,
                            Content = "The second tweet!"
                        },
                        new
                        {
                            Id = 3,
                            Content = "The third tweet!"
                        },
                        new
                        {
                            Id = 4,
                            Content = "The fourth tweet!"
                        });
                });

            modelBuilder.Entity("TwitterSimplified.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bigboss@twitterify.com",
                            Password = "nopass",
                            Username = "BigBoss"
                        },
                        new
                        {
                            Id = 2,
                            Email = "smallboss@twitterify.com",
                            Password = "futureBigboss",
                            Username = "SmallBoss"
                        });
                });

            modelBuilder.Entity("TwitterSimplified.Models.LikeModel", b =>
                {
                    b.HasOne("TwitterSimplified.Models.TweetModel", "Tweet")
                        .WithMany("Likes")
                        .HasForeignKey("TweetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwitterSimplified.Models.UserModel", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TwitterSimplified.Models.ProfileModel", b =>
                {
                    b.HasOne("TwitterSimplified.Models.UserModel", "User")
                        .WithOne("Profile")
                        .HasForeignKey("TwitterSimplified.Models.ProfileModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TwitterSimplified.Models.TweetModel", b =>
                {
                    b.HasOne("TwitterSimplified.Models.UserModel", "User")
                        .WithMany("Tweets")
                        .HasForeignKey("UserId1");

                    b.HasOne("TwitterSimplified.Models.UserModel", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId");
                });
#pragma warning restore 612, 618
        }
    }
}
